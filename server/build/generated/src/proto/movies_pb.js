"use strict";
// source: src/proto/movies.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.Cast', null, global);
goog.exportSymbol('proto.Country', null, global);
goog.exportSymbol('proto.Director', null, global);
goog.exportSymbol('proto.Genre', null, global);
goog.exportSymbol('proto.Language', null, global);
goog.exportSymbol('proto.Movie', null, global);
goog.exportSymbol('proto.Request', null, global);
goog.exportSymbol('proto.Response', null, global);
goog.exportSymbol('proto.Writer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Genre = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Genre, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Genre.displayName = 'proto.Genre';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Cast = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Cast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Cast.displayName = 'proto.Cast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Language = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Language, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Language.displayName = 'proto.Language';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Director = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Director, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Director.displayName = 'proto.Director';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Writer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Writer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Writer.displayName = 'proto.Writer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Country = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Country.displayName = 'proto.Country';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Movie = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.Movie.repeatedFields_, null);
};
goog.inherits(proto.Movie, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Movie.displayName = 'proto.Movie';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Request = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Request.displayName = 'proto.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Response = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.Response.repeatedFields_, null);
};
goog.inherits(proto.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Response.displayName = 'proto.Response';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Genre.prototype.toObject = function (opt_includeInstance) {
        return proto.Genre.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Genre} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Genre.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Genre}
 */
proto.Genre.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Genre;
    return proto.Genre.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Genre} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Genre}
 */
proto.Genre.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Genre.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Genre.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Genre} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Genre.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.Genre.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Genre} returns this
 */
proto.Genre.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Cast.prototype.toObject = function (opt_includeInstance) {
        return proto.Cast.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Cast} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Cast.toObject = function (includeInstance, msg) {
        var f, obj = {
            actor: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Cast}
 */
proto.Cast.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Cast;
    return proto.Cast.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Cast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Cast}
 */
proto.Cast.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setActor(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Cast.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Cast.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Cast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Cast.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getActor();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string actor = 1;
 * @return {string}
 */
proto.Cast.prototype.getActor = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Cast} returns this
 */
proto.Cast.prototype.setActor = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Language.prototype.toObject = function (opt_includeInstance) {
        return proto.Language.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Language} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Language.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Language}
 */
proto.Language.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Language;
    return proto.Language.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Language} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Language}
 */
proto.Language.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Language.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Language.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Language} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Language.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.Language.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Language} returns this
 */
proto.Language.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Director.prototype.toObject = function (opt_includeInstance) {
        return proto.Director.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Director} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Director.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Director}
 */
proto.Director.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Director;
    return proto.Director.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Director} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Director}
 */
proto.Director.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Director.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Director.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Director} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Director.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.Director.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Director} returns this
 */
proto.Director.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Writer.prototype.toObject = function (opt_includeInstance) {
        return proto.Writer.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Writer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Writer.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Writer}
 */
proto.Writer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Writer;
    return proto.Writer.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Writer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Writer}
 */
proto.Writer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Writer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Writer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Writer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Writer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.Writer.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Writer} returns this
 */
proto.Writer.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Country.prototype.toObject = function (opt_includeInstance) {
        return proto.Country.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Country} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Country.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Country}
 */
proto.Country.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Country;
    return proto.Country.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Country}
 */
proto.Country.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Country.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Country.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Country.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.Country.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Country} returns this
 */
proto.Country.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Movie.repeatedFields_ = [3, 6, 11, 13, 14, 17];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Movie.prototype.toObject = function (opt_includeInstance) {
        return proto.Movie.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Movie} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Movie.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, ""),
            plot: jspb.Message.getFieldWithDefault(msg, 2, ""),
            genresList: jspb.Message.toObjectList(msg.getGenresList(), proto.Genre.toObject, includeInstance),
            runtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
            rated: jspb.Message.getFieldWithDefault(msg, 5, ""),
            castList: jspb.Message.toObjectList(msg.getCastList(), proto.Cast.toObject, includeInstance),
            numMflixComments: jspb.Message.getFieldWithDefault(msg, 7, 0),
            poster: jspb.Message.getFieldWithDefault(msg, 8, ""),
            title: jspb.Message.getFieldWithDefault(msg, 9, ""),
            fullplot: jspb.Message.getFieldWithDefault(msg, 10, ""),
            languagesList: jspb.Message.toObjectList(msg.getLanguagesList(), proto.Language.toObject, includeInstance),
            released: jspb.Message.getFieldWithDefault(msg, 12, ""),
            directorsList: jspb.Message.toObjectList(msg.getDirectorsList(), proto.Director.toObject, includeInstance),
            writersList: jspb.Message.toObjectList(msg.getWritersList(), proto.Writer.toObject, includeInstance),
            lastupdated: jspb.Message.getFieldWithDefault(msg, 15, ""),
            year: jspb.Message.getFieldWithDefault(msg, 16, ""),
            countriesList: jspb.Message.toObjectList(msg.getCountriesList(), proto.Country.toObject, includeInstance),
            type: jspb.Message.getFieldWithDefault(msg, 18, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Movie}
 */
proto.Movie.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Movie;
    return proto.Movie.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Movie} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Movie}
 */
proto.Movie.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPlot(value);
                break;
            case 3:
                var value = new proto.Genre;
                reader.readMessage(value, proto.Genre.deserializeBinaryFromReader);
                msg.addGenres(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setRuntime(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setRated(value);
                break;
            case 6:
                var value = new proto.Cast;
                reader.readMessage(value, proto.Cast.deserializeBinaryFromReader);
                msg.addCast(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setNumMflixComments(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setPoster(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setTitle(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setFullplot(value);
                break;
            case 11:
                var value = new proto.Language;
                reader.readMessage(value, proto.Language.deserializeBinaryFromReader);
                msg.addLanguages(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setReleased(value);
                break;
            case 13:
                var value = new proto.Director;
                reader.readMessage(value, proto.Director.deserializeBinaryFromReader);
                msg.addDirectors(value);
                break;
            case 14:
                var value = new proto.Writer;
                reader.readMessage(value, proto.Writer.deserializeBinaryFromReader);
                msg.addWriters(value);
                break;
            case 15:
                var value = /** @type {string} */ (reader.readString());
                msg.setLastupdated(value);
                break;
            case 16:
                var value = /** @type {string} */ (reader.readString());
                msg.setYear(value);
                break;
            case 17:
                var value = new proto.Country;
                reader.readMessage(value, proto.Country.deserializeBinaryFromReader);
                msg.addCountries(value);
                break;
            case 18:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Movie.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Movie.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Movie} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Movie.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getPlot();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getGenresList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.Genre.serializeBinaryToWriter);
    }
    f = message.getRuntime();
    if (f !== 0) {
        writer.writeInt32(4, f);
    }
    f = message.getRated();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getCastList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(6, f, proto.Cast.serializeBinaryToWriter);
    }
    f = message.getNumMflixComments();
    if (f !== 0) {
        writer.writeInt32(7, f);
    }
    f = message.getPoster();
    if (f.length > 0) {
        writer.writeString(8, f);
    }
    f = message.getTitle();
    if (f.length > 0) {
        writer.writeString(9, f);
    }
    f = message.getFullplot();
    if (f.length > 0) {
        writer.writeString(10, f);
    }
    f = message.getLanguagesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(11, f, proto.Language.serializeBinaryToWriter);
    }
    f = message.getReleased();
    if (f.length > 0) {
        writer.writeString(12, f);
    }
    f = message.getDirectorsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(13, f, proto.Director.serializeBinaryToWriter);
    }
    f = message.getWritersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(14, f, proto.Writer.serializeBinaryToWriter);
    }
    f = message.getLastupdated();
    if (f.length > 0) {
        writer.writeString(15, f);
    }
    f = message.getYear();
    if (f.length > 0) {
        writer.writeString(16, f);
    }
    f = message.getCountriesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(17, f, proto.Country.serializeBinaryToWriter);
    }
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(18, f);
    }
};
/**
 * optional string id = 1;
 * @return {string}
 */
proto.Movie.prototype.getId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string plot = 2;
 * @return {string}
 */
proto.Movie.prototype.getPlot = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setPlot = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * repeated Genre genres = 3;
 * @return {!Array<!proto.Genre>}
 */
proto.Movie.prototype.getGenresList = function () {
    return /** @type{!Array<!proto.Genre>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Genre, 3));
};
/**
 * @param {!Array<!proto.Genre>} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setGenresList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.Genre=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Genre}
 */
proto.Movie.prototype.addGenres = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Genre, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearGenresList = function () {
    return this.setGenresList([]);
};
/**
 * optional int32 runtime = 4;
 * @return {number}
 */
proto.Movie.prototype.getRuntime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setRuntime = function (value) {
    return jspb.Message.setProto3IntField(this, 4, value);
};
/**
 * optional string rated = 5;
 * @return {string}
 */
proto.Movie.prototype.getRated = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setRated = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * repeated Cast cast = 6;
 * @return {!Array<!proto.Cast>}
 */
proto.Movie.prototype.getCastList = function () {
    return /** @type{!Array<!proto.Cast>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Cast, 6));
};
/**
 * @param {!Array<!proto.Cast>} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setCastList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 6, value);
};
/**
 * @param {!proto.Cast=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Cast}
 */
proto.Movie.prototype.addCast = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.Cast, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearCastList = function () {
    return this.setCastList([]);
};
/**
 * optional int32 num_mflix_comments = 7;
 * @return {number}
 */
proto.Movie.prototype.getNumMflixComments = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};
/**
 * @param {number} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setNumMflixComments = function (value) {
    return jspb.Message.setProto3IntField(this, 7, value);
};
/**
 * optional string poster = 8;
 * @return {string}
 */
proto.Movie.prototype.getPoster = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setPoster = function (value) {
    return jspb.Message.setProto3StringField(this, 8, value);
};
/**
 * optional string title = 9;
 * @return {string}
 */
proto.Movie.prototype.getTitle = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setTitle = function (value) {
    return jspb.Message.setProto3StringField(this, 9, value);
};
/**
 * optional string fullplot = 10;
 * @return {string}
 */
proto.Movie.prototype.getFullplot = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setFullplot = function (value) {
    return jspb.Message.setProto3StringField(this, 10, value);
};
/**
 * repeated Language languages = 11;
 * @return {!Array<!proto.Language>}
 */
proto.Movie.prototype.getLanguagesList = function () {
    return /** @type{!Array<!proto.Language>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Language, 11));
};
/**
 * @param {!Array<!proto.Language>} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setLanguagesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 11, value);
};
/**
 * @param {!proto.Language=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Language}
 */
proto.Movie.prototype.addLanguages = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Language, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearLanguagesList = function () {
    return this.setLanguagesList([]);
};
/**
 * optional string released = 12;
 * @return {string}
 */
proto.Movie.prototype.getReleased = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setReleased = function (value) {
    return jspb.Message.setProto3StringField(this, 12, value);
};
/**
 * repeated Director directors = 13;
 * @return {!Array<!proto.Director>}
 */
proto.Movie.prototype.getDirectorsList = function () {
    return /** @type{!Array<!proto.Director>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Director, 13));
};
/**
 * @param {!Array<!proto.Director>} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setDirectorsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 13, value);
};
/**
 * @param {!proto.Director=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Director}
 */
proto.Movie.prototype.addDirectors = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.Director, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearDirectorsList = function () {
    return this.setDirectorsList([]);
};
/**
 * repeated Writer writers = 14;
 * @return {!Array<!proto.Writer>}
 */
proto.Movie.prototype.getWritersList = function () {
    return /** @type{!Array<!proto.Writer>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Writer, 14));
};
/**
 * @param {!Array<!proto.Writer>} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setWritersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 14, value);
};
/**
 * @param {!proto.Writer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Writer}
 */
proto.Movie.prototype.addWriters = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.Writer, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearWritersList = function () {
    return this.setWritersList([]);
};
/**
 * optional string lastupdated = 15;
 * @return {string}
 */
proto.Movie.prototype.getLastupdated = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setLastupdated = function (value) {
    return jspb.Message.setProto3StringField(this, 15, value);
};
/**
 * optional string year = 16;
 * @return {string}
 */
proto.Movie.prototype.getYear = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setYear = function (value) {
    return jspb.Message.setProto3StringField(this, 16, value);
};
/**
 * repeated Country countries = 17;
 * @return {!Array<!proto.Country>}
 */
proto.Movie.prototype.getCountriesList = function () {
    return /** @type{!Array<!proto.Country>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Country, 17));
};
/**
 * @param {!Array<!proto.Country>} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setCountriesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 17, value);
};
/**
 * @param {!proto.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Country}
 */
proto.Movie.prototype.addCountries = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.Country, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearCountriesList = function () {
    return this.setCountriesList([]);
};
/**
 * optional string type = 18;
 * @return {string}
 */
proto.Movie.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};
/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 18, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Request.prototype.toObject = function (opt_includeInstance) {
        return proto.Request.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Request} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Request.toObject = function (includeInstance, msg) {
        var f, obj = {
            requestId: jspb.Message.getFieldWithDefault(msg, 1, 0),
            movie: (f = msg.getMovie()) && proto.Movie.toObject(includeInstance, f),
            data: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Request}
 */
proto.Request.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Request;
    return proto.Request.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Request}
 */
proto.Request.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setRequestId(value);
                break;
            case 2:
                var value = new proto.Movie;
                reader.readMessage(value, proto.Movie.deserializeBinaryFromReader);
                msg.setMovie(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Request.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Request.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Request.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequestId();
    if (f !== 0) {
        writer.writeInt32(1, f);
    }
    f = message.getMovie();
    if (f != null) {
        writer.writeMessage(2, f, proto.Movie.serializeBinaryToWriter);
    }
    f = message.getData();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * optional int32 request_id = 1;
 * @return {number}
 */
proto.Request.prototype.getRequestId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setRequestId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional Movie movie = 2;
 * @return {?proto.Movie}
 */
proto.Request.prototype.getMovie = function () {
    return /** @type{?proto.Movie} */ (jspb.Message.getWrapperField(this, proto.Movie, 2));
};
/**
 * @param {?proto.Movie|undefined} value
 * @return {!proto.Request} returns this
*/
proto.Request.prototype.setMovie = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.clearMovie = function () {
    return this.setMovie(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Request.prototype.hasMovie = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string data = 3;
 * @return {string}
 */
proto.Request.prototype.getData = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.Request} returns this
 */
proto.Request.prototype.setData = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Response.repeatedFields_ = [4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Response.prototype.toObject = function (opt_includeInstance) {
        return proto.Response.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Response} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Response.toObject = function (includeInstance, msg) {
        var f, obj = {
            responseId: jspb.Message.getFieldWithDefault(msg, 1, 0),
            sucess: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
            message: jspb.Message.getFieldWithDefault(msg, 3, ""),
            moviesList: jspb.Message.toObjectList(msg.getMoviesList(), proto.Movie.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Response}
 */
proto.Response.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Response;
    return proto.Response.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Response}
 */
proto.Response.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setResponseId(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSucess(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 4:
                var value = new proto.Movie;
                reader.readMessage(value, proto.Movie.deserializeBinaryFromReader);
                msg.addMovies(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Response.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Response.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Response.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getResponseId();
    if (f !== 0) {
        writer.writeInt32(1, f);
    }
    f = message.getSucess();
    if (f) {
        writer.writeBool(2, f);
    }
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getMoviesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.Movie.serializeBinaryToWriter);
    }
};
/**
 * optional int32 response_id = 1;
 * @return {number}
 */
proto.Response.prototype.getResponseId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.Response} returns this
 */
proto.Response.prototype.setResponseId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional bool sucess = 2;
 * @return {boolean}
 */
proto.Response.prototype.getSucess = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.Response} returns this
 */
proto.Response.prototype.setSucess = function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.Response.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.Response} returns this
 */
proto.Response.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated Movie movies = 4;
 * @return {!Array<!proto.Movie>}
 */
proto.Response.prototype.getMoviesList = function () {
    return /** @type{!Array<!proto.Movie>} */ (jspb.Message.getRepeatedWrapperField(this, proto.Movie, 4));
};
/**
 * @param {!Array<!proto.Movie>} value
 * @return {!proto.Response} returns this
*/
proto.Response.prototype.setMoviesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.Movie=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Movie}
 */
proto.Response.prototype.addMovies = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Movie, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Response} returns this
 */
proto.Response.prototype.clearMoviesList = function () {
    return this.setMoviesList([]);
};
goog.object.extend(exports, proto);
