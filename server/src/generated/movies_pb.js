// source: movies.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.mongomovies.Cast', null, global);
goog.exportSymbol('proto.mongomovies.Country', null, global);
goog.exportSymbol('proto.mongomovies.Director', null, global);
goog.exportSymbol('proto.mongomovies.Genre', null, global);
goog.exportSymbol('proto.mongomovies.Language', null, global);
goog.exportSymbol('proto.mongomovies.Movie', null, global);
goog.exportSymbol('proto.mongomovies.Request', null, global);
goog.exportSymbol('proto.mongomovies.Response', null, global);
goog.exportSymbol('proto.mongomovies.Writer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Genre = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Genre, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Genre.displayName = 'proto.mongomovies.Genre';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Cast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Cast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Cast.displayName = 'proto.mongomovies.Cast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Language = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Language, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Language.displayName = 'proto.mongomovies.Language';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Director = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Director, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Director.displayName = 'proto.mongomovies.Director';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Writer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Writer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Writer.displayName = 'proto.mongomovies.Writer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Country.displayName = 'proto.mongomovies.Country';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Movie = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mongomovies.Movie.repeatedFields_, null);
};
goog.inherits(proto.mongomovies.Movie, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Movie.displayName = 'proto.mongomovies.Movie';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mongomovies.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Request.displayName = 'proto.mongomovies.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mongomovies.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mongomovies.Response.repeatedFields_, null);
};
goog.inherits(proto.mongomovies.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mongomovies.Response.displayName = 'proto.mongomovies.Response';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Genre.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Genre.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Genre} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Genre.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Genre}
 */
proto.mongomovies.Genre.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Genre;
  return proto.mongomovies.Genre.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Genre} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Genre}
 */
proto.mongomovies.Genre.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Genre.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Genre.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Genre} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Genre.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mongomovies.Genre.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Genre} returns this
 */
proto.mongomovies.Genre.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Cast.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Cast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Cast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Cast.toObject = function(includeInstance, msg) {
  var f, obj = {
    actor: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Cast}
 */
proto.mongomovies.Cast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Cast;
  return proto.mongomovies.Cast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Cast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Cast}
 */
proto.mongomovies.Cast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Cast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Cast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Cast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Cast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string actor = 1;
 * @return {string}
 */
proto.mongomovies.Cast.prototype.getActor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Cast} returns this
 */
proto.mongomovies.Cast.prototype.setActor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Language.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Language.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Language} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Language.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Language}
 */
proto.mongomovies.Language.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Language;
  return proto.mongomovies.Language.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Language} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Language}
 */
proto.mongomovies.Language.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Language.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Language.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Language} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Language.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mongomovies.Language.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Language} returns this
 */
proto.mongomovies.Language.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Director.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Director.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Director} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Director.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Director}
 */
proto.mongomovies.Director.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Director;
  return proto.mongomovies.Director.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Director} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Director}
 */
proto.mongomovies.Director.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Director.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Director.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Director} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Director.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mongomovies.Director.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Director} returns this
 */
proto.mongomovies.Director.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Writer.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Writer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Writer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Writer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Writer}
 */
proto.mongomovies.Writer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Writer;
  return proto.mongomovies.Writer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Writer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Writer}
 */
proto.mongomovies.Writer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Writer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Writer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Writer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Writer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mongomovies.Writer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Writer} returns this
 */
proto.mongomovies.Writer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Country.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Country.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Country} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Country.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Country}
 */
proto.mongomovies.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Country;
  return proto.mongomovies.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Country}
 */
proto.mongomovies.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mongomovies.Country.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Country} returns this
 */
proto.mongomovies.Country.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mongomovies.Movie.repeatedFields_ = [3,6,11,13,14,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Movie.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Movie.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Movie} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Movie.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    plot: jspb.Message.getFieldWithDefault(msg, 2, ""),
    genresList: jspb.Message.toObjectList(msg.getGenresList(),
    proto.mongomovies.Genre.toObject, includeInstance),
    runtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rated: jspb.Message.getFieldWithDefault(msg, 5, ""),
    castList: jspb.Message.toObjectList(msg.getCastList(),
    proto.mongomovies.Cast.toObject, includeInstance),
    numMflixComments: jspb.Message.getFieldWithDefault(msg, 7, 0),
    poster: jspb.Message.getFieldWithDefault(msg, 8, ""),
    title: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fullplot: jspb.Message.getFieldWithDefault(msg, 10, ""),
    languagesList: jspb.Message.toObjectList(msg.getLanguagesList(),
    proto.mongomovies.Language.toObject, includeInstance),
    released: jspb.Message.getFieldWithDefault(msg, 12, ""),
    directorsList: jspb.Message.toObjectList(msg.getDirectorsList(),
    proto.mongomovies.Director.toObject, includeInstance),
    writersList: jspb.Message.toObjectList(msg.getWritersList(),
    proto.mongomovies.Writer.toObject, includeInstance),
    lastupdated: jspb.Message.getFieldWithDefault(msg, 15, ""),
    year: jspb.Message.getFieldWithDefault(msg, 16, ""),
    countriesList: jspb.Message.toObjectList(msg.getCountriesList(),
    proto.mongomovies.Country.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Movie}
 */
proto.mongomovies.Movie.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Movie;
  return proto.mongomovies.Movie.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Movie} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Movie}
 */
proto.mongomovies.Movie.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlot(value);
      break;
    case 3:
      var value = new proto.mongomovies.Genre;
      reader.readMessage(value,proto.mongomovies.Genre.deserializeBinaryFromReader);
      msg.addGenres(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRuntime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRated(value);
      break;
    case 6:
      var value = new proto.mongomovies.Cast;
      reader.readMessage(value,proto.mongomovies.Cast.deserializeBinaryFromReader);
      msg.addCast(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumMflixComments(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoster(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullplot(value);
      break;
    case 11:
      var value = new proto.mongomovies.Language;
      reader.readMessage(value,proto.mongomovies.Language.deserializeBinaryFromReader);
      msg.addLanguages(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setReleased(value);
      break;
    case 13:
      var value = new proto.mongomovies.Director;
      reader.readMessage(value,proto.mongomovies.Director.deserializeBinaryFromReader);
      msg.addDirectors(value);
      break;
    case 14:
      var value = new proto.mongomovies.Writer;
      reader.readMessage(value,proto.mongomovies.Writer.deserializeBinaryFromReader);
      msg.addWriters(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastupdated(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    case 17:
      var value = new proto.mongomovies.Country;
      reader.readMessage(value,proto.mongomovies.Country.deserializeBinaryFromReader);
      msg.addCountries(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Movie.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Movie.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Movie} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Movie.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlot();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGenresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mongomovies.Genre.serializeBinaryToWriter
    );
  }
  f = message.getRuntime();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRated();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCastList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.mongomovies.Cast.serializeBinaryToWriter
    );
  }
  f = message.getNumMflixComments();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPoster();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFullplot();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.mongomovies.Language.serializeBinaryToWriter
    );
  }
  f = message.getReleased();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getDirectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.mongomovies.Director.serializeBinaryToWriter
    );
  }
  f = message.getWritersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.mongomovies.Writer.serializeBinaryToWriter
    );
  }
  f = message.getLastupdated();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.mongomovies.Country.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string plot = 2;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getPlot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setPlot = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Genre genres = 3;
 * @return {!Array<!proto.mongomovies.Genre>}
 */
proto.mongomovies.Movie.prototype.getGenresList = function() {
  return /** @type{!Array<!proto.mongomovies.Genre>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Genre, 3));
};


/**
 * @param {!Array<!proto.mongomovies.Genre>} value
 * @return {!proto.mongomovies.Movie} returns this
*/
proto.mongomovies.Movie.prototype.setGenresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mongomovies.Genre=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Genre}
 */
proto.mongomovies.Movie.prototype.addGenres = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mongomovies.Genre, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.clearGenresList = function() {
  return this.setGenresList([]);
};


/**
 * optional int32 runtime = 4;
 * @return {number}
 */
proto.mongomovies.Movie.prototype.getRuntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setRuntime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string rated = 5;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getRated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setRated = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Cast cast = 6;
 * @return {!Array<!proto.mongomovies.Cast>}
 */
proto.mongomovies.Movie.prototype.getCastList = function() {
  return /** @type{!Array<!proto.mongomovies.Cast>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Cast, 6));
};


/**
 * @param {!Array<!proto.mongomovies.Cast>} value
 * @return {!proto.mongomovies.Movie} returns this
*/
proto.mongomovies.Movie.prototype.setCastList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.mongomovies.Cast=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Cast}
 */
proto.mongomovies.Movie.prototype.addCast = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.mongomovies.Cast, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.clearCastList = function() {
  return this.setCastList([]);
};


/**
 * optional int32 num_mflix_comments = 7;
 * @return {number}
 */
proto.mongomovies.Movie.prototype.getNumMflixComments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setNumMflixComments = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string poster = 8;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getPoster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setPoster = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string title = 9;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string fullplot = 10;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getFullplot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setFullplot = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated Language languages = 11;
 * @return {!Array<!proto.mongomovies.Language>}
 */
proto.mongomovies.Movie.prototype.getLanguagesList = function() {
  return /** @type{!Array<!proto.mongomovies.Language>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Language, 11));
};


/**
 * @param {!Array<!proto.mongomovies.Language>} value
 * @return {!proto.mongomovies.Movie} returns this
*/
proto.mongomovies.Movie.prototype.setLanguagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.mongomovies.Language=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Language}
 */
proto.mongomovies.Movie.prototype.addLanguages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.mongomovies.Language, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};


/**
 * optional string released = 12;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getReleased = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setReleased = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated Director directors = 13;
 * @return {!Array<!proto.mongomovies.Director>}
 */
proto.mongomovies.Movie.prototype.getDirectorsList = function() {
  return /** @type{!Array<!proto.mongomovies.Director>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Director, 13));
};


/**
 * @param {!Array<!proto.mongomovies.Director>} value
 * @return {!proto.mongomovies.Movie} returns this
*/
proto.mongomovies.Movie.prototype.setDirectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.mongomovies.Director=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Director}
 */
proto.mongomovies.Movie.prototype.addDirectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.mongomovies.Director, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.clearDirectorsList = function() {
  return this.setDirectorsList([]);
};


/**
 * repeated Writer writers = 14;
 * @return {!Array<!proto.mongomovies.Writer>}
 */
proto.mongomovies.Movie.prototype.getWritersList = function() {
  return /** @type{!Array<!proto.mongomovies.Writer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Writer, 14));
};


/**
 * @param {!Array<!proto.mongomovies.Writer>} value
 * @return {!proto.mongomovies.Movie} returns this
*/
proto.mongomovies.Movie.prototype.setWritersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.mongomovies.Writer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Writer}
 */
proto.mongomovies.Movie.prototype.addWriters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.mongomovies.Writer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.clearWritersList = function() {
  return this.setWritersList([]);
};


/**
 * optional string lastupdated = 15;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getLastupdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setLastupdated = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string year = 16;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setYear = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * repeated Country countries = 17;
 * @return {!Array<!proto.mongomovies.Country>}
 */
proto.mongomovies.Movie.prototype.getCountriesList = function() {
  return /** @type{!Array<!proto.mongomovies.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Country, 17));
};


/**
 * @param {!Array<!proto.mongomovies.Country>} value
 * @return {!proto.mongomovies.Movie} returns this
*/
proto.mongomovies.Movie.prototype.setCountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.mongomovies.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Country}
 */
proto.mongomovies.Movie.prototype.addCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.mongomovies.Country, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};


/**
 * optional string type = 18;
 * @return {string}
 */
proto.mongomovies.Movie.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Movie} returns this
 */
proto.mongomovies.Movie.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    movie: (f = msg.getMovie()) && proto.mongomovies.Movie.toObject(includeInstance, f),
    data: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Request}
 */
proto.mongomovies.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Request;
  return proto.mongomovies.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Request}
 */
proto.mongomovies.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.mongomovies.Movie;
      reader.readMessage(value,proto.mongomovies.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mongomovies.Movie.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Movie movie = 2;
 * @return {?proto.mongomovies.Movie}
 */
proto.mongomovies.Request.prototype.getMovie = function() {
  return /** @type{?proto.mongomovies.Movie} */ (
    jspb.Message.getWrapperField(this, proto.mongomovies.Movie, 2));
};


/**
 * @param {?proto.mongomovies.Movie|undefined} value
 * @return {!proto.mongomovies.Request} returns this
*/
proto.mongomovies.Request.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mongomovies.Request} returns this
 */
proto.mongomovies.Request.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mongomovies.Request.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string data = 3;
 * @return {string}
 */
proto.mongomovies.Request.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Request} returns this
 */
proto.mongomovies.Request.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mongomovies.Response.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mongomovies.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.mongomovies.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mongomovies.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    sucess: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    moviesList: jspb.Message.toObjectList(msg.getMoviesList(),
    proto.mongomovies.Movie.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mongomovies.Response}
 */
proto.mongomovies.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mongomovies.Response;
  return proto.mongomovies.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mongomovies.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mongomovies.Response}
 */
proto.mongomovies.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = new proto.mongomovies.Movie;
      reader.readMessage(value,proto.mongomovies.Movie.deserializeBinaryFromReader);
      msg.addMovies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mongomovies.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mongomovies.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mongomovies.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mongomovies.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMoviesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mongomovies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool sucess = 2;
 * @return {boolean}
 */
proto.mongomovies.Response.prototype.getSucess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mongomovies.Response} returns this
 */
proto.mongomovies.Response.prototype.setSucess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.mongomovies.Response.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mongomovies.Response} returns this
 */
proto.mongomovies.Response.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Movie movies = 4;
 * @return {!Array<!proto.mongomovies.Movie>}
 */
proto.mongomovies.Response.prototype.getMoviesList = function() {
  return /** @type{!Array<!proto.mongomovies.Movie>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mongomovies.Movie, 4));
};


/**
 * @param {!Array<!proto.mongomovies.Movie>} value
 * @return {!proto.mongomovies.Response} returns this
*/
proto.mongomovies.Response.prototype.setMoviesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mongomovies.Movie=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mongomovies.Movie}
 */
proto.mongomovies.Response.prototype.addMovies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mongomovies.Movie, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mongomovies.Response} returns this
 */
proto.mongomovies.Response.prototype.clearMoviesList = function() {
  return this.setMoviesList([]);
};


goog.object.extend(exports, proto.mongomovies);
